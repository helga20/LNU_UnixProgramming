#include <cstdlib>
#include <iostream>
#include <fstream>
#include <filesystem>
namespace fs = std::filesystem;
int main(int argc, char *argv[])
{
        std::string dir = " ";
        std::string dir_to = " ";
        std::string e = " ";

        if(std::string(argv[1]) == std::string("--help"))
        {
                std::cout << "Usage ./task2.cpp DIR DIR_TO EXT" << std::endl;
                std::cout << "Copy all files that have EXT extention from DIR to DIR_TO" << std::endl; 
        }       
        else if (std::string(argv[1]) == std::string("--test"))
        {
                system("./test2.bash");
        }
        else if (argc != 3)
        {       
                std::cout << "task2.cpp: missing file operands" << std::endl;
                std::cout << "Try './task2.cpp --help' for more information" << std::endl;
        }

        else if (std::string(argv[1]) == std::string(dir) && std::string(argv[2]) == dir_to && std::string(argv[3]) == e) 
        {       
/*      
        std::string(argv[1]) == dir;
        std::string(argv[2]) == dir_to;
        std::string(argv[3]) == e;
*/
                for (const auto & p : fs::recursive_directory_iterator(dir)) 
                {       
                        fs::path fileToCopy = p; 
                        if (fileToCopy.extension() == e)
                        {
                                fs::path target = dir_to / fileToCopy.filename(); 
                                fs::copy_file(p,target,fs::copy_options::overwrite_existing); 
                        }
                }

        }
        std::cin.get();         
        //static_cast<void>(std::system("tree"));
        return 0;
}

